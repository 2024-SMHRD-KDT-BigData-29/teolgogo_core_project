# application.yml
spring:
  # 데이터베이스 설정
  datasource:
    url: jdbc:mariadb://project-db-campus.smhrd.com:3308/mp_24K_bigdata29_p2_1
    username: mp_24K_bigdata29_p2_1
    password: smhrd1
    driver-class-name: org.mariadb.jdbc.Driver

  servlet:
    multipart:
      max-file-size: ${app.file.max-size:10MB}
      max-request-size: ${app.file.max-size:10MB}
      enabled: true

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true
    show-sql: true

  # 시큐리티 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# 애플리케이션 설정
app:
  auth:
    tokenSecret: ${JWT_SECRET_KEY:털고고시크릿키12345678901234567890}
    tokenExpirationMsec: 864000000
    refreshTokenExpirationMsec: 2592000000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - https://teolgogo.com/oauth2/redirect
  kakao:
    api-key: ${KAKAO_API_KEY}
    push-notification-url: https://kapi.kakao.com/v2/api/talk/memo/default/send
  map:
    kakao-api-key: ${KAKAO_MAP_API_KEY}
  file:
    upload-dir: ./uploads
    max-size: 10485760  # 10MB를 바이트 단위로 표현 (10 * 1024 * 1024)
    allowed-types: image/jpeg,image/png,image/gif
  payment:
    toss:
      client-key: dummy_client_key
      secret-key: dummy_secret_key
      success-url: http://localhost:3000/payments/success
      fail-url: http://localhost:3000/payments/fail
      api-url: ${TOSS_API_URL:https://api.tosspayments.com/v1}
    kakao:
      admin-key: dummy_key
      # 다른 관련 속성들에도 더미 값 추가
      cid: TC0ONETIME
      approval-url: http://localhost:3000/payments/kakao/approval
      cancel-url: http://localhost:3000/payments/kakao/cancel
      fail-url: http://localhost:3000/payments/kakao/fail
      api-url: ${KAKAO_API_URL:https://kapi.kakao.com}

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  error:
    include-message: always
    include-binding-errors: always

# 로깅 설정
logging:
  level:
    org.springframework.web: INFO
    org.springframework.security: INFO
    com.teolgogo: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE